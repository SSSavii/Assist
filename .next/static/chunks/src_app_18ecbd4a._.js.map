{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/georgiiisavich/Desktop/assist_plus/src/app/components/BalanceCard.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport Image from 'next/image';\n\nconst SPARKLE_IMAGE = '/images/one_spark.png';\nconst CRYSTAL_IMAGE = '/images/134.png';\nconst ARROW_IMAGE = '/images/picmi2.png';\n\ninterface Sparkle {\n  id: string;\n  top: string;\n  left: string;\n  size: number;\n  animationDuration: number;\n}\n\ninterface BalanceCardProps {\n  balance: number;\n  onButtonClick: () => void;\n  tapsLeft: number;\n  tapLimit: number;\n}\n\nconst random = (min: number, max: number): number => Math.floor(Math.random() * (max - min + 1)) + min;\n\nexport default function BalanceCard({ balance, onButtonClick, tapsLeft }: BalanceCardProps) {\n  const [sparkles, setSparkles] = useState<Sparkle[]>([]);\n  const [isCoolingDown, setIsCoolingDown] = useState(false);\n\n  const handleCrystalClick = () => {\n    if (isCoolingDown || tapsLeft <= 0) return;\n    onButtonClick();\n    setIsCoolingDown(true);\n    setTimeout(() => {\n      setIsCoolingDown(false);\n    }, 50);\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const angle = Math.random() * 2 * Math.PI;\n      const maxRadius = 45;\n      const radius = Math.sqrt(Math.random()) * maxRadius;\n      const offsetX = radius * Math.cos(angle);\n      const offsetY = radius * Math.sin(angle);\n      const sparkle: Sparkle = {\n        id: String(Date.now()),\n        top: `calc(50% + ${offsetY}%)`,\n        left: `calc(50% + ${offsetX}%)`,\n        size: random(15, 25),\n        animationDuration: random(2000, 3500),\n      };\n      setSparkles(currentSparkles => [...currentSparkles, sparkle]);\n      setTimeout(() => {\n        setSparkles(current => current.filter(s => s.id !== sparkle.id));\n      }, sparkle.animationDuration);\n    }, 900);\n    return () => clearInterval(interval);\n  }, []);\n\n    return (\n    <div className=\"w-full bg-white text-white rounded-3xl\">\n      <div className=\"relative flex flex-col items-center justify-center\">\n        <div className=\"relative h-50 w-50 flex items-center justify-center\">\n          <button\n            onClick={handleCrystalClick}\n            disabled={tapsLeft <= 0}\n            className=\"group rounded-full active:scale-95 transition-transform duration-100 disabled:cursor-not-allowed disabled:opacity-70\"\n          >\n            <Image\n              src={CRYSTAL_IMAGE}\n              alt=\"Crystal\"\n              width={200}\n              height={200}\n              className=\"transition-all duration-200\"\n              priority\n            />\n          </button>\n          {sparkles.map(({ id, top, left, size, animationDuration }) => (\n            <img\n              key={id}\n              src={SPARKLE_IMAGE}\n              alt=\"\"\n              className=\"absolute pointer-events-none sparkle-animation invert\"\n              style={{ top, left, width: `${size}px`, height: `${size}px`, animationDuration: `${animationDuration}ms`, willChange: 'transform, opacity' }}\n            />\n          ))}\n        </div>\n        <p className=\"text-3xl font-bold text-black\">\n          {balance}\n        </p>\n        <div className=\"absolute top-[65px] left-1/2 transform translate-x-[35px] pointer-events-none\">\n          <Image\n            src={ARROW_IMAGE}\n            alt=\"Нажми на меня\"\n            width={150}\n            height={150}\n          />\n        </div>\n        \n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKA,MAAM,gBAAgB;AACtB,MAAM,gBAAgB;AACtB,MAAM,cAAc;AAiBpB,MAAM,SAAS,CAAC,KAAa,MAAwB,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,CAAC,MAAM,MAAM,CAAC,KAAK;AAEpF,SAAS,YAAY,EAAE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAoB;;IACxF,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IACtD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnD,MAAM,qBAAqB;QACzB,IAAI,iBAAiB,YAAY,GAAG;QACpC;QACA,iBAAiB;QACjB,WAAW;YACT,iBAAiB;QACnB,GAAG;IACL;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR,MAAM,WAAW;kDAAY;oBAC3B,MAAM,QAAQ,KAAK,MAAM,KAAK,IAAI,KAAK,EAAE;oBACzC,MAAM,YAAY;oBAClB,MAAM,SAAS,KAAK,IAAI,CAAC,KAAK,MAAM,MAAM;oBAC1C,MAAM,UAAU,SAAS,KAAK,GAAG,CAAC;oBAClC,MAAM,UAAU,SAAS,KAAK,GAAG,CAAC;oBAClC,MAAM,UAAmB;wBACvB,IAAI,OAAO,KAAK,GAAG;wBACnB,KAAK,CAAC,WAAW,EAAE,QAAQ,EAAE,CAAC;wBAC9B,MAAM,CAAC,WAAW,EAAE,QAAQ,EAAE,CAAC;wBAC/B,MAAM,OAAO,IAAI;wBACjB,mBAAmB,OAAO,MAAM;oBAClC;oBACA;0DAAY,CAAA,kBAAmB;mCAAI;gCAAiB;6BAAQ;;oBAC5D;0DAAW;4BACT;kEAAY,CAAA,UAAW,QAAQ,MAAM;0EAAC,CAAA,IAAK,EAAE,EAAE,KAAK,QAAQ,EAAE;;;wBAChE;yDAAG,QAAQ,iBAAiB;gBAC9B;iDAAG;YACH;yCAAO,IAAM,cAAc;;QAC7B;gCAAG,EAAE;IAEH,qBACA,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BACC,SAAS;4BACT,UAAU,YAAY;4BACtB,WAAU;sCAEV,cAAA,6LAAC,gIAAA,CAAA,UAAK;gCACJ,KAAK;gCACL,KAAI;gCACJ,OAAO;gCACP,QAAQ;gCACR,WAAU;gCACV,QAAQ;;;;;;;;;;;wBAGX,SAAS,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,iBAAiB,EAAE,iBACvD,6LAAC;gCAEC,KAAK;gCACL,KAAI;gCACJ,WAAU;gCACV,OAAO;oCAAE;oCAAK;oCAAM,OAAO,GAAG,KAAK,EAAE,CAAC;oCAAE,QAAQ,GAAG,KAAK,EAAE,CAAC;oCAAE,mBAAmB,GAAG,kBAAkB,EAAE,CAAC;oCAAE,YAAY;gCAAqB;+BAJtI;;;;;;;;;;;8BAQX,6LAAC;oBAAE,WAAU;8BACV;;;;;;8BAEH,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC,gIAAA,CAAA,UAAK;wBACJ,KAAK;wBACL,KAAI;wBACJ,OAAO;wBACP,QAAQ;;;;;;;;;;;;;;;;;;;;;;AAOpB;GA9EwB;KAAA","debugId":null}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file:///Users/georgiiisavich/Desktop/assist_plus/src/app/%28main%29/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport BalanceCard from 'wxqryy/app/components/BalanceCard';\n\ntype UserProfile = {\n  id: number;\n  tg_id: number; // Добавляем tg_id\n  balance_crystals: number;\n  cases_to_open: number;\n  daily_taps_count: number;\n  last_tap_date: string | null;\n  subscribed_to_channel?: boolean;\n  voted_for_channel?: boolean;\n  tasks_completed?: {\n    subscribe: boolean;\n    vote: boolean;\n    invite: boolean;\n  };\n};\n\ninterface TaskCardProps {\n  title: string;\n  reward: number;\n  buttonText: string;\n  checkButtonText: string;\n  action: () => void;\n  checkAction: () => void;\n  disabled?: boolean;\n  isCompleted?: boolean;\n}\n\nfunction TaskCard({ \n  title, \n  reward, \n  buttonText, \n  checkButtonText, \n  action, \n  checkAction, \n  disabled = false, \n  isCompleted = false \n}: TaskCardProps) {\n  return (\n    <div className={`${isCompleted ? 'bg-green-500' : 'bg-red-500'} text-white p-3 rounded-2xl flex flex-col w-full`}>\n      <div>\n        <p className=\"font-extrabold text-sm\">{title}</p> \n      </div>\n      <div className=\"flex justify-between items-center mt-1.5\"> \n        <div className=\"flex items-center mt-2\">\n          <span className=\"font-bold text-lg\">+{reward}</span>\n          <div \n            className=\"ml-1 h-5 w-5 bg-white\"\n            style={{\n              maskImage: `url('/images/crystal.png')`,\n              WebkitMaskImage: `url('/images/crystal.png')`,\n              maskSize: 'contain',\n              maskRepeat: 'no-repeat',\n            }}\n          />\n        </div>\n\n        <div className=\"flex gap-1\">\n          <button \n            onClick={action}\n            disabled={disabled || isCompleted}\n            className=\"bg-white text-black font-medium py-1 px-2 rounded-full text-xs min-w-[60px] h-8 flex items-center justify-center active:scale-95 disabled:opacity-50\"\n          >\n            {buttonText}\n          </button>\n\n          <button \n            onClick={checkAction}\n            disabled={isCompleted}\n            className=\"bg-blue-500 text-white font-medium py-1 px-2 rounded-full text-xs min-w-[60px] h-8 flex items-center justify-center active:scale-95 disabled:opacity-50\"\n          >\n            {isCompleted ? 'Готово' : checkButtonText}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default function HomePage() {\n  const [user, setUser] = useState<UserProfile | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [tapsLeft, setTapsLeft] = useState(0);\n  const DAILY_TAP_LIMIT = 100;\n\n  useEffect(() => {\n  const tg = window.Telegram?.WebApp;\n  if (tg) {\n    tg.ready();\n    \n    // Получаем startapp параметр из WebApp\n    const startappParam = tg.initDataUnsafe?.start_param;\n    console.log('startapp from WebApp:', startappParam);\n    \n    fetch('/api/auth', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ \n        initData: tg.initData,\n        startapp: startappParam // Добавляем отдельно\n      }),\n    })\n    .then(response => {\n      if (!response.ok) throw new Error(`Ошибка сети: ${response.statusText}`);\n      return response.json();\n    })\n    .then((data: UserProfile) => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      if ((data as any).error) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        setError((data as any).error);\n      } else {\n        setUser(data);\n        const today = new Date().toISOString().split('T')[0];\n        if (data.last_tap_date === today) {\n          setTapsLeft(Math.max(0, DAILY_TAP_LIMIT - data.daily_taps_count));\n        } else {\n          setTapsLeft(DAILY_TAP_LIMIT);\n        }\n      }\n    })\n    .catch(err => {\n      console.error(\"Auth fetch error:\", err);\n      setError(\"Не удалось связаться с сервером.\");\n    })\n    .finally(() => setLoading(false));\n  } else {\n    setError(\"Пожалуйста, откройте приложение в Telegram.\");\n    setLoading(false);\n  }\n}, []);\n\n  const handleEarnCrystals = () => {\n    const tg = window.Telegram?.WebApp;\n    if (!user || !tg?.initData || tapsLeft <= 0) return;\n    setTapsLeft(prev => prev - 1);\n    setUser(prevUser => {\n        if (!prevUser) return null;\n        return {\n            ...prevUser,\n            balance_crystals: prevUser.balance_crystals + 1,\n            daily_taps_count: prevUser.daily_taps_count + 1\n        };\n    });\n\n    fetch('/api/tap', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ initData: tg.initData }),\n    })\n    .then(response => response.json())\n    .then(data => {\n      if (data.error) {\n        console.error('Tap error:', data.error);\n        \n        setUser(prevUser => {\n            if (!prevUser) return null;\n            const newBalance = (prevUser.balance_crystals || 0) - 1;\n            const newTaps = (prevUser.daily_taps_count || 0) - 1;\n            return {\n                ...prevUser,\n                balance_crystals: newBalance < 0 ? 0 : newBalance,\n                daily_taps_count: newTaps < 0 ? 0 : newTaps\n            };\n        });\n        \n        if (typeof data.tapsLeft === 'number') {\n            setTapsLeft(data.tapsLeft);\n        } else {\n            setTapsLeft(prev => prev + 1);\n        }\n        \n        if (data.error === 'Daily tap limit reached') {\n            tg.showAlert('Плюсы на сегодня закончились! Возвращайся завтра.');\n        }\n\n      } else {\n        if (typeof data.newBalance === 'number') {\n            setUser(prev => prev ? { ...prev, balance_crystals: data.newBalance } : null);\n        }\n        if (typeof data.tapsLeft === 'number') {\n            setTapsLeft(data.tapsLeft);\n        }\n      }\n    })\n    .catch(err => {\n      console.error('Tap fetch error:', err);\n      setTapsLeft(prev => prev + 1);\n      setUser(prevUser => {\n          if (!prevUser) return null;\n          return {\n              ...prevUser,\n              balance_crystals: prevUser.balance_crystals - 1,\n              daily_taps_count: prevUser.daily_taps_count - 1\n          };\n      });\n      tg.showAlert('Произошла ошибка сети. Попробуйте еще раз.');\n    });\n};\n  \n  const handleInviteFriend = () => {\n  const tg = window.Telegram?.WebApp;\n  if (!tg || !user || !user.tg_id) {\n    tg?.showAlert('Не удалось создать ссылку. Пожалуйста, перезагрузите страницу.');\n    return;\n  }\n  \n  const botUsername = process.env.NEXT_PUBLIC_TELEGRAM_BOT_USERNAME;\n  const appName = 'assist_plus'; // Имя приложения из BotFather\n  \n  if (!botUsername) {\n    console.error(\"Bot username is not set in .env.local\");\n    tg?.showAlert('Ошибка конфигурации приложения.');\n    return;\n  }\n  \n  // Правильный формат после настройки Mini App\n  const referralLink = `https://t.me/${botUsername}/${appName}?startapp=ref${user.tg_id}`;\n  \n  console.log('Referral link:', referralLink);\n  \n  const shareText = `Привет! Запусти мини-приложение \"Ассист+\" и получай бонусы!`;\n  \n  try {\n    const shareUrl = `https://t.me/share/url?url=${encodeURIComponent(referralLink)}&text=${encodeURIComponent(shareText)}`;\n    tg.openTelegramLink(shareUrl);\n  } catch (error) {\n    console.error('Share error:', error);\n    navigator.clipboard.writeText(`${shareText}\\n${referralLink}`);\n    tg.showAlert('Ссылка скопирована в буфер обмена! Отправь ее другу.');\n  }\n};\n\nconst checkTask = (taskId: 'subscribe' | 'vote' | 'invite') => {\n  const tg = window.Telegram?.WebApp;\n  if (!tg?.initData) return;\n\n  fetch('/api/check-subscription', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ initData: tg.initData, taskId }),\n  })\n    .then((res) => res.json())\n    .then((data) => {\n      if (data.success) {\n        setUser((prev) =>\n          prev\n            ? {\n                ...prev,\n                balance_crystals: data.newBalance,\n                // Обновляем tasks_completed\n                tasks_completed: {\n                  ...prev.tasks_completed,\n                  subscribe: taskId === 'subscribe' ? true : prev.tasks_completed?.subscribe || false,\n                  vote: taskId === 'vote' ? true : prev.tasks_completed?.vote || false,\n                  invite: taskId === 'invite' ? true : prev.tasks_completed?.invite || false,\n                }\n              }\n            : null\n        );\n        tg.showAlert(data.message || `Награда получена: +${data.reward} плюсов!`);\n      } else {\n        tg.showAlert(data.message || 'Условия не выполнены.');\n      }\n    })\n    .catch((err) => {\n      console.error(`Check ${taskId} error:`, err);\n      tg.showAlert('Ошибка соединения с сервером.');\n    });\n};\n\n  const handleSubscribeToChannel = () => {\n    const tg = window.Telegram?.WebApp;\n    tg?.openTelegramLink('https://t.me/assistplus_business');\n  };\n\n  const handleVoteForChannel = () => {\n    const tg = window.Telegram?.WebApp;\n    tg?.openTelegramLink('https://t.me/assistplus_business');\n  };\n\n  // Обновляем tasks с проверкой на существование tasks_completed\n  const tasks = [\n    { \n      title: 'Подпишись на Ассист+', \n      reward: 100, \n      buttonText: 'Подписаться',\n      checkButtonText: 'Проверить',\n      action: handleSubscribeToChannel,\n      checkAction: () => checkTask('subscribe'),\n      isCompleted: user?.tasks_completed?.subscribe || false\n    },\n    { \n      title: 'Отдай голос на улучшение канала', \n      reward: 500, \n      buttonText: 'Проголосовать',\n      checkButtonText: 'Проверить',\n      action: handleVoteForChannel,\n      checkAction: () => checkTask('vote'),\n      isCompleted: user?.tasks_completed?.vote || false\n    },\n    { \n      title: 'Пригласи друга', \n      reward: 500, \n      buttonText: 'Пригласить',\n      checkButtonText: 'Проверить',\n      action: handleInviteFriend,\n      checkAction: () => checkTask('invite'),\n      isCompleted: user?.tasks_completed?.invite || false\n    },\n  ];\n\n  if (loading) {\n    return <div className=\"flex justify-center items-center h-screen bg-white text-gray-500\">Загрузка...</div>;\n  }\n  if (error) {\n    return <div className=\"p-4 text-center text-red-500\">Ошибка: {error}</div>;\n  }\n  if (!user) {\n    return <div className=\"p-4 text-center text-gray-500\">Не удалось загрузить данные пользователя.</div>;\n  }\n\n  return (\n    <div className=\"flex flex-col font-['Unbounded'] items-center text-center text-black bg-white pt-2\">\n      <h1 className=\"text-6xl font-black mb-2\">\n        Ассист<span className=\"text-red-500\">+</span>\n      </h1>\n      \n      {/* Кнопка подписаться на канал */}\n      <div className=\"w-full max-w-sm px-4 mb-4\">\n        <button \n          onClick={handleSubscribeToChannel}\n          className=\"w-full bg-blue-500 text-white font-bold py-3 px-4 rounded-2xl text-lg transition-all active:scale-95\"\n        >\n          Подписаться на канал\n        </button>\n      </div>\n\n      <div className=\"w-full max-w-sm pb-2\">\n        <BalanceCard\n          balance={user.balance_crystals}\n          onButtonClick={handleEarnCrystals}\n          tapsLeft={tapsLeft}\n          tapLimit={DAILY_TAP_LIMIT}\n        />\n      </div>\n      <p className=\"text-l font-bold pl-4 pr-4 pb-2 max-w-sm\">\n        Зарабатывай плюсы и меняй их в аукционе знакомств\n      </p>\n      \n      <div className=\"w-full max-w-sm px-4 text-left\">\n        <h2 className=\"text-red-500 font-bold mt-2 text-sm mb-1 ml-2\">ЗАДАНИЯ</h2>\n        <div className=\"space-y-2\">\n          {tasks.map((task, index) => (\n            <TaskCard key={index} {...task} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}