{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/georgiiisavich/Desktop/assist_plus/src/app/%28main%29/page.tsx"],"sourcesContent":["/* eslint-disable @next/next/no-img-element */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n'use client';\n\nimport { useState, useEffect } from 'react';\n\nconst GlobalStyles = () => (\n  <>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\" />\n    <style jsx global>{`\n      * {\n        box-sizing: border-box;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n      }\n      \n      html, body {\n        margin: 0;\n        padding: 0;\n        width: 100%;\n        height: 100%;\n        overflow-x: hidden;\n      }\n      \n      @font-face {\n        font-family: 'Cera Pro';\n        src: url('/fonts/CeraPro-Regular.woff2') format('woff2'),\n             url('/fonts/CeraPro-Regular.woff') format('woff');\n        font-weight: 400;\n        font-style: normal;\n        font-display: swap;\n      }\n      \n      @font-face {\n        font-family: 'Cera Pro';\n        src: url('/fonts/CeraPro-Light.woff2') format('woff2'),\n             url('/fonts/CeraPro-Light.woff') format('woff');\n        font-weight: 300;\n        font-style: normal;\n        font-display: swap;\n      }\n      \n      @font-face {\n        font-family: 'Cera Pro';\n        src: url('/fonts/CeraPro-Medium.woff2') format('woff2'),\n             url('/fonts/CeraPro-Medium.woff') format('woff');\n        font-weight: 500;\n        font-style: normal;\n        font-display: swap;\n      }\n      \n      @font-face {\n        font-family: 'Cera Pro';\n        src: url('/fonts/CeraPro-Bold.woff2') format('woff2'),\n             url('/fonts/CeraPro-Bold.woff') format('woff');\n        font-weight: 700;\n        font-style: normal;\n        font-display: swap;\n      }\n      \n      @font-face {\n        font-family: 'Vasek';\n        src: url('/fonts/Vasek-Italic.woff2') format('woff2'),\n             url('/fonts/Vasek-Italic.woff') format('woff');\n        font-weight: 400;\n        font-style: italic;\n        font-display: swap;\n      }\n      \n      body {\n        font-family: 'Cera Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;\n      }\n    `}</style>\n  </>\n);\n\ntype UserProfile = {\n  id: number;\n  tg_id: number;\n  balance_crystals: number;\n  cases_to_open: number;\n  daily_taps_count: number;\n  last_tap_date: string | null;\n  subscribed_to_channel?: boolean;\n  voted_for_channel?: boolean;\n  tasks_completed?: {\n    subscribe: boolean;\n    vote: boolean;\n    invite: boolean;\n  };\n};\n\ninterface Task {\n  id: number;\n  points: number;\n  title: string;\n  description?: string;\n  checkButtonText: string;\n  actionButtonText: string;\n  action: () => void;\n  checkAction: () => void;\n  isCompleted?: boolean;\n}\n\nexport default function HomePage() {\n  const [user, setUser] = useState<UserProfile | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [tapsLeft, setTapsLeft] = useState(0);\n  const [logoError, setLogoError] = useState(false);\n  const [isBalancePressed, setIsBalancePressed] = useState(false);\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [deviceInfo, setDeviceInfo] = useState({\n    isIOS: false,\n    isMobile: false,\n    pixelRatio: 1,\n    viewportWidth: 375,\n    viewportHeight: 812\n  });\n  const DAILY_TAP_LIMIT = 100;\n\n  useEffect(() => {\n    const userAgent = navigator.userAgent.toLowerCase();\n    const isIOS = /iphone|ipad|ipod/.test(userAgent);\n    const isMobile = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/.test(userAgent);\n    const pixelRatio = window.devicePixelRatio || 1;\n    const viewportWidth = window.innerWidth;\n    const viewportHeight = window.innerHeight;\n    \n    setDeviceInfo({\n      isIOS,\n      isMobile,\n      pixelRatio,\n      viewportWidth,\n      viewportHeight\n    });\n\n    const tg = window.Telegram?.WebApp;\n    if (tg) {\n      tg.ready();\n      tg.expand();\n      tg.disableVerticalSwipes();\n      \n      const startappParam = tg.initDataUnsafe?.start_param;\n      \n      fetch('/api/auth', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ \n          initData: tg.initData,\n          startapp: startappParam\n        }),\n      })\n      .then(response => {\n        if (!response.ok) throw new Error(`Ошибка сети: ${response.statusText}`);\n        return response.json();\n      })\n      .then((data: UserProfile) => {\n        if ((data as any).error) {\n          setError((data as any).error);\n        } else {\n          setUser(data);\n          const today = new Date().toISOString().split('T')[0];\n          if (data.last_tap_date === today) {\n            setTapsLeft(Math.max(0, DAILY_TAP_LIMIT - data.daily_taps_count));\n          } else {\n            setTapsLeft(DAILY_TAP_LIMIT);\n          }\n        }\n      })\n      .catch(err => {\n        console.error(\"Auth fetch error:\", err);\n        setError(\"Не удалось связаться с сервером.\");\n      })\n      .finally(() => setLoading(false));\n    } else {\n      setError(\"Пожалуйста, откройте приложение в Telegram.\");\n      setLoading(false);\n    }\n  }, []);\n\n  const handleEarnCrystals = () => {\n    const tg = window.Telegram?.WebApp;\n    if (!user || !tg?.initData || tapsLeft <= 0) return;\n    if (tapsLeft <= 0) {\n      tg.showAlert('Плюсы на сегодня закончились! Возвращайся завтра.');\n      return;\n    }\n    \n    if (tg.HapticFeedback) {\n      tg.HapticFeedback.impactOccurred('light');\n    }\n    \n    setTapsLeft(prev => prev - 1);\n    setUser(prevUser => {\n        if (!prevUser) return null;\n        return {\n            ...prevUser,\n            balance_crystals: prevUser.balance_crystals + 1,\n            daily_taps_count: prevUser.daily_taps_count + 1\n        };\n    });\n\n    fetch('/api/tap', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ initData: tg.initData }),\n    })\n    .then(response => response.json())\n    .then(data => {\n      if (data.error) {\n        setUser(prevUser => {\n            if (!prevUser) return null;\n            const newBalance = (prevUser.balance_crystals || 0) - 1;\n            const newTaps = (prevUser.daily_taps_count || 0) - 1;\n            return {\n                ...prevUser,\n                balance_crystals: newBalance < 0 ? 0 : newBalance,\n                daily_taps_count: newTaps < 0 ? 0 : newTaps\n            };\n        });\n        \n        if (typeof data.tapsLeft === 'number') {\n            setTapsLeft(data.tapsLeft);\n        } else {\n            setTapsLeft(prev => prev + 1);\n        }\n        \n        if (data.error === 'Daily tap limit reached') {\n            tg.showAlert('Плюсы на сегодня закончились! Возвращайся завтра.');\n        }\n      } else {\n        if (typeof data.newBalance === 'number') {\n            setUser(prev => prev ? { ...prev, balance_crystals: data.newBalance } : null);\n        }\n        if (typeof data.tapsLeft === 'number') {\n            setTapsLeft(data.tapsLeft);\n        }\n      }\n    })\n    .catch(err => {\n      console.error('Tap fetch error:', err);\n      setTapsLeft(prev => prev + 1);\n      setUser(prevUser => {\n          if (!prevUser) return null;\n          return {\n              ...prevUser,\n              balance_crystals: prevUser.balance_crystals - 1,\n              daily_taps_count: prevUser.daily_taps_count - 1\n          };\n      });\n      tg.showAlert('Произошла ошибка сети. Попробуйте еще раз.');\n    });\n  };\n  \n  const handleInviteFriend = () => {\n    const tg = window.Telegram?.WebApp;\n    \n    if (!tg) {\n      return;\n    }\n    \n    if (loading) {\n      tg.showAlert('Загрузка данных. Подождите немного.');\n      return;\n    }\n    \n    if (!user) {\n      tg.showAlert('Данные пользователя не загружены. Перезагрузите страницу.');\n      return;\n    }\n    \n    const userId = user.tg_id;\n    \n    if (!userId) {\n      tg.showAlert('ID пользователя не найден. Перезагрузите страницу.');\n      return;\n    }\n    \n    const botUsername = 'my_auction_admin_bot';\n    const appName = 'assist_plus';\n    \n    const referralLink = `https://t.me/${botUsername}/${appName}?startapp=ref${userId}`;\n    const shareText = `Привет! Запусти мини-приложение \"Ассист+\" и получай бонусы!`;\n    \n    try {\n      const shareUrl = `https://t.me/share/url?url=${encodeURIComponent(referralLink)}&text=${encodeURIComponent(shareText)}`;\n      tg.openTelegramLink(shareUrl);\n    } catch (error) {\n      console.error('Share error:', error);\n      const fullText = `${shareText}\\n${referralLink}`;\n      if (navigator.clipboard && navigator.clipboard.writeText) {\n        navigator.clipboard.writeText(fullText)\n          .then(() => {\n            tg.showAlert('Ссылка скопирована в буфер обмена! Отправь ее другу.');\n          })\n          .catch(() => {\n            tg.showAlert(`Ссылка для друга:\\n${referralLink}`);\n          });\n      } else {\n        tg.showAlert(`Ссылка для друга:\\n${referralLink}`);\n      }\n    }\n  };\n\n  const checkTask = (taskId: 'subscribe' | 'vote' | 'invite') => {\n    const tg = window.Telegram?.WebApp;\n    if (!tg?.initData) return;\n\n    fetch('/api/check-subscription', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ initData: tg.initData, taskId }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.success) {\n          setUser((prev) =>\n            prev\n              ? {\n                  ...prev,\n                  balance_crystals: data.newBalance,\n                  tasks_completed: {\n                    ...prev.tasks_completed,\n                    subscribe: taskId === 'subscribe' ? true : prev.tasks_completed?.subscribe || false,\n                    vote: taskId === 'vote' ? true : prev.tasks_completed?.vote || false,\n                    invite: taskId === 'invite' ? true : prev.tasks_completed?.invite || false,\n                  }\n                }\n              : null\n          );\n          tg.showAlert(data.message || `Награда получена: +${data.reward} плюсов!`);\n        } else {\n          tg.showAlert(data.message || 'Условия не выполнены.');\n        }\n      })\n      .catch((err) => {\n        console.error(`Check ${taskId} error:`, err);\n        tg.showAlert('Ошибка соединения с сервером.');\n      });\n  };\n\n  const handleSubscribeToChannel = () => {\n    const tg = window.Telegram?.WebApp;\n    tg?.openTelegramLink('https://t.me/+6flpcSdc4sg5OTAy');\n  };\n\n  const handleVoteForChannel = () => {\n    const tg = window.Telegram?.WebApp;\n    \n    if (tg?.initData) {\n      fetch('/api/save-boost-count', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ initData: tg.initData }),\n      })\n      .then(() => {\n        tg.openTelegramLink('https://t.me/boost?c=2782276287');\n      })\n      .catch((err) => {\n        console.error('Save boost count error:', err);\n        tg.openTelegramLink('https://t.me/boost?c=2782276287');\n      });\n    } else {\n      tg?.openTelegramLink('https://t.me/boost?c=2782276287');\n    }\n  };\n\n  const tasks: Task[] = [\n    {\n      id: 1,\n      points: 100,\n      title: \"Подпишись на Ассист+\",\n      checkButtonText: \"Проверить\",\n      actionButtonText: \"Подписаться\",\n      action: handleSubscribeToChannel,\n      checkAction: () => checkTask('subscribe'),\n      isCompleted: user?.tasks_completed?.subscribe || false,\n    },\n    {\n      id: 2,\n      points: 500,\n      title: \"Отдай голос\",\n      description: \"на улучшение канала\",\n      checkButtonText: \"Проверить\",\n      actionButtonText: \"Проголосовать\",\n      action: handleVoteForChannel,\n      checkAction: () => checkTask('vote'),\n      isCompleted: user?.tasks_completed?.vote || false,\n    },\n    {\n      id: 3,\n      points: 500,\n      title: \"Пригласи друга\",\n      checkButtonText: \"Проверить\",\n      actionButtonText: \"Пригласить\",\n      action: handleInviteFriend,\n      checkAction: () => checkTask('invite'),\n      isCompleted: user?.tasks_completed?.invite || false,\n    },\n  ];\n\n  const handleTaskAction = (taskId: number, actionType: \"check\" | \"action\") => {\n    const task = tasks.find(t => t.id === taskId);\n    if (task) {\n      if (actionType === \"check\") {\n        task.checkAction();\n      } else {\n        task.action();\n      }\n    }\n  };\n\n  if (loading) {\n    return <div className=\"loading-container\">Загрузка...</div>;\n  }\n  if (error) {\n    return <div className=\"error-container\">Ошибка: {error}</div>;\n  }\n  if (!user) {\n    return <div className=\"error-container\">Не удалось загрузить данные пользователя.</div>;\n  }\n\n  return (\n    <>\n      <GlobalStyles />\n      <div className=\"app-wrapper\">\n        <main className=\"main-container\">\n          <header className=\"logo-section\">\n            <div className=\"logo-container\">\n              <div className=\"logo-wrapper\">\n                {logoError ? (\n                  <div className=\"logo-text-fallback\">\n                    <span className=\"assist-text\">АССИСТ</span>\n                    <span className=\"plus-text\">+</span>\n                  </div>\n                ) : (\n                  <div className=\"logo-image-container\">\n                    <img\n                      className=\"logo-image\"\n                      alt=\"Ассист+ логотип\"\n                      src=\"/svg4122-a7pi.svg\"\n                      onError={() => setLogoError(true)}\n                    />\n                    <img\n                      className=\"plus-icon\"\n                      alt=\"Плюсик\"\n                      src=\"/svg4122-denw.svg\"\n                    />\n                  </div>\n                )}\n              </div>\n              \n              <div className=\"logo-text-container\">\n                <div className=\"logo-subtitle\">между поколениями</div>\n                <div className=\"logo-title\">обмен</div>\n              </div>\n            </div>\n          </header>\n\n          <section className=\"balance-section\">\n            <div \n              className=\"balance-container\"\n              onClick={handleEarnCrystals}\n              onMouseDown={() => setIsBalancePressed(true)}\n              onMouseUp={() => setIsBalancePressed(false)}\n              onMouseLeave={() => setIsBalancePressed(false)}\n              onTouchStart={() => setIsBalancePressed(true)}\n              onTouchEnd={() => setIsBalancePressed(false)}\n            >\n              <div className={`balance-shadow-box ${isBalancePressed ? 'pressed' : ''}`}>\n                <img\n                  className=\"balance-crystal\"\n                  alt=\"Кристалл\"\n                  src=\"/images/134.png\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"balance-amount\">{user.balance_crystals}</div>\n\n            <p className=\"balance-description\">\n              <span className=\"description-text\">\n                Кликай, зарабатывай плюсы, <br />и меняй их в{\" \"}\n              </span>\n              <span className=\"description-bold\">аукционе знакомств</span>\n            </p>\n          </section>\n\n          <section className=\"tasks-section\">\n            <div className=\"tasks-container\">\n              <div className=\"tasks-background\">\n                <div className=\"tasks-bg-color\"></div>\n                <img\n                  className=\"tasks-bg-image\"\n                  alt=\"Фоновое изображение\"\n                  src=\"/svg1642-j9o.svg\"\n                />\n              </div>\n\n              <div className=\"tasks-header\">\n                <h2 className=\"tasks-title\">Задания</h2>\n              </div>\n\n              <div className=\"tasks-list\">\n                {tasks.map((task) => (\n                  <article\n                    key={task.id}\n                    className=\"task-card\"\n                  >\n                    <div className=\"task-header\">\n                      <div className=\"task-content\">\n                        {task.description ? (\n                          <p className=\"task-title\">\n                            {task.title} <br />\n                            {task.description}\n                          </p>\n                        ) : (\n                          <div className=\"task-title\">{task.title}</div>\n                        )}\n                      </div>\n\n                      <div className=\"task-points\">\n                        <div className=\"points-text\">+{task.points}</div>\n                        <div className=\"points-icon\">\n                          <img\n                            src=\"/vector4120-sezw.svg\"\n                            alt=\"Кристалл\"\n                            className=\"points-crystal\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"task-actions\">\n                      <button\n                        onClick={() => handleTaskAction(task.id, \"check\")}\n                        className=\"task-button check-button\"\n                      >\n                        <div className=\"button-text\">{task.checkButtonText}</div>\n                      </button>\n\n                      <button\n                        onClick={() => handleTaskAction(task.id, \"action\")}\n                        className=\"task-button action-button\"\n                      >\n                        <div className=\"button-text bold\">{task.actionButtonText}</div>\n                      </button>\n                    </div>\n\n                    <div className=\"task-glow\"></div>\n                  </article>\n                ))}\n              </div>\n            </div>\n          </section>\n        </main>\n\n        <style jsx>{`\n          .app-wrapper {\n            position: relative;\n            min-height: 100vh;\n            min-height: -webkit-fill-available;\n            background-color: #FFFFFF;\n            width: 100%;\n            max-width: 100vw;\n            overflow-x: hidden;\n            overflow-y: auto;\n            -webkit-overflow-scrolling: touch;\n          }\n\n          .main-container {\n            width: 100%;\n            display: flex;\n            overflow-y: auto;\n            overflow-x: hidden;\n            -webkit-overflow-scrolling: touch;\n            overscroll-behavior-y: contain;\n            min-height: 100vh;\n            min-height: -webkit-fill-available;\n            align-items: center;\n            flex-direction: column;\n            background-color: #FFFFFF;\n            padding: 25px 0px 0px;\n            padding-bottom: 70px;\n            box-sizing: border-box;\n            gap: 8px;\n            position: relative;\n          }\n\n          .logo-section {\n            gap: 6px;\n            display: flex;\n            align-self: stretch;\n            align-items: center;\n            flex-direction: column;\n          }\n          \n          .logo-container {\n            width: 173px;\n            height: 66px;\n            display: flex;\n            position: relative;\n            align-items: flex-start;\n            flex-direction: column;\n          }\n          \n          .logo-wrapper {\n            position: relative;\n            width: 160px;\n            height: 38px;\n            margin-left: 10px;\n          }\n          \n          .logo-image-container {\n            position: relative;\n            width: 100%;\n            height: 100%;\n          }\n          \n          .logo-image {\n            width: 100%;\n            height: 100%;\n            object-fit: contain;\n            -webkit-backface-visibility: hidden;\n            transform: translateZ(0);\n          }\n          \n          .plus-icon {\n            position: absolute;\n            top: -12px;\n            right: -12px;\n            width: 19px;\n            height: 19px;\n            object-fit: contain;\n            -webkit-backface-visibility: hidden;\n            transform: translateZ(0);\n          }\n          \n          .logo-text-fallback {\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            position: relative;\n          }\n          \n          .assist-text {\n            font-family: 'Cera Pro', -apple-system, BlinkMacSystemFont, sans-serif;\n            font-weight: 700;\n            font-size: 19px;\n            color: #000000;\n          }\n          \n          .plus-text {\n            font-family: 'Cera Pro', -apple-system, BlinkMacSystemFont, sans-serif;\n            font-weight: 700;\n            font-size: 19px;\n            color: #FF0000;\n            margin-left: 2px;\n          }\n          \n          .logo-text-container {\n            position: relative;\n            width: 176px;\n            height: 27px;\n            margin-top: 1px;\n            margin-left: -2px;\n          }\n          \n          .logo-subtitle {\n            position: absolute;\n            top: 12px;\n            left: calc(50% - 36px);\n            font-family: 'Cera Pro', -apple-system, BlinkMacSystemFont, sans-serif;\n            font-weight: 400;\n            font-size: 14px;\n            text-align: center;\n            color: #000000;\n            line-height: 11.7px;\n            letter-spacing: -1px;\n            white-space: nowrap;\n          }\n          \n          .logo-title {\n            color: #000000;\n            height: auto;\n            position: absolute;\n            font-size: 38px;\n            font-style: italic;\n            font-family: 'Vasek', Georgia, serif;\n            font-weight: 400;\n            line-height: 81%;\n            text-align: center;\n          }\n\n          .balance-section {\n            gap: 15px;\n            display: flex;\n            padding: 5px 0 12px;\n            align-self: stretch;\n            align-items: center;\n            flex-direction: column;\n          }\n          \n          .balance-container {\n            width: 114px;\n            height: 114px;\n            position: relative;\n            cursor: pointer;\n            margin-top: -6px;\n            -webkit-tap-highlight-color: transparent;\n          }\n          \n          .balance-shadow-box {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 114px;\n            height: 114px;\n            border-radius: 24px;\n            box-shadow: \n              4px 4px 8px rgba(0, 0, 0, 0.25),\n              inset 3px 3px 8px #ffffff,\n              inset -3px -4px 16px rgba(0, 0, 0, 0.3);\n            background: linear-gradient(144deg, #D9D9D9 0%, #CDCDCD 100%);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            transition: transform 0.1s ease-in-out;\n          }\n          \n          .balance-shadow-box.pressed {\n            transform: scale(0.98);\n          }\n          \n          .balance-crystal {\n            width: 62px;\n            height: 58px;\n            object-fit: contain;\n            -webkit-backface-visibility: hidden;\n            transform: translateZ(0);\n          }\n          \n          .balance-amount {\n            background: rgba(255, 255, 255, 0.8);\n            padding: 6px 12px;\n            border-radius: 20px;\n            font-family: 'Cera Pro', -apple-system, BlinkMacSystemFont, sans-serif;\n            font-weight: 700;\n            font-size: 20px;\n            color: #000000;\n            border: 1px solid #b4b4b4;\n            line-height: 16.2px;\n            letter-spacing: -0.60px;\n            margin-top: -5px;\n          }\n          \n          .balance-description {\n            width: 240px;\n            font-family: 'Cera Pro', -apple-system, BlinkMacSystemFont, sans-serif;\n            font-weight: 400;\n            font-size: 18px;\n            text-align: center;\n            color: #000000;\n            line-height: 21px;\n            letter-spacing: -0.34px;\n            margin: 0;\n          }\n          \n          .description-text {\n            letter-spacing: -0.05px;\n          }\n          \n          .description-bold {\n            font-family: 'Cera Pro', -apple-system, BlinkMacSystemFont, sans-serif;\n            font-weight: 700;\n            letter-spacing: -0.05px;\n          }\n\n          .tasks-section {\n            gap: 6px;\n            display: flex;\n            align-self: stretch;\n            align-items: center;\n            flex-direction: column;\n            width: 100%;\n          }\n          \n          .tasks-container {\n            width: 100vw;\n            margin-left: -16px;\n            margin-right: -16px;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            gap: 16px;\n            padding: 28px 0px 12px;\n            position: relative;\n            overflow: hidden;\n          }\n          \n          .tasks-background {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            bottom: 0;\n          }\n          \n          .tasks-bg-color {\n            position: absolute;\n            top: 73px;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background-color: #EAEAEA;\n          }\n          \n          .tasks-bg-image {\n            position: absolute;\n            top: 0;\n            left: 50%;\n            transform: translateX(-50%);\n            width: 100%;\n            max-width: 100vw;\n            height: 253px;\n            object-fit: cover;\n          }\n          \n          .tasks-header {\n            display: flex;\n            align-items: center;\n            justify-content: flex-end;\n            gap: 6px;\n            padding: 4px 19px 0px 0px;\n            width: 100%;\n            max-width: 100vw;\n            z-index: 1;\n          }\n          \n          .tasks-title {\n            font-family: 'Cera Pro', -apple-system, BlinkMacSystemFont, sans-serif;\n            font-weight: 700;\n            font-size: 26px;\n            text-align: right;\n            color: #000000;\n            line-height: 28px;\n            letter-spacing: -0.77px;\n            white-space: nowrap;\n            margin: 0;\n          }\n          \n          .tasks-list {\n            display: inline-flex;\n            flex-direction: column;\n            align-items: center;\n            gap: 8px;\n            z-index: 1;\n            width: 100%;\n            padding: 0 16px;\n            box-sizing: border-box;\n          }\n          \n          .task-card {\n            display: flex;\n            flex-direction: column;\n            align-items: flex-start;\n            gap: 4px;\n            padding: 16px;\n            width: 100%;\n            max-width: calc(100vw - 32px);\n            position: relative;\n            background: linear-gradient(244deg, #F23939 0%, #DB1B1B 100%);\n            border-radius: 24px;\n            overflow: hidden;\n          }\n          \n          .task-header {\n            display: flex;\n            align-items: flex-start;\n            justify-content: space-between;\n            width: 100%;\n            gap: 8px;\n          }\n          \n          .task-content {\n            flex: 1;\n            display: flex;\n            flex-direction: column;\n            align-items: flex-start;\n            justify-content: center;\n          }\n          \n          .task-title {\n            font-family: 'Cera Pro', -apple-system, BlinkMacSystemFont, sans-serif;\n            font-weight: 500;\n            font-size: 16px;\n            text-align: left;\n            color: #FFFFFF;\n            line-height: 16px;\n            letter-spacing: -0.32px;\n            margin: 0;\n          }\n          \n          .task-points {\n            display: inline-flex;\n            align-items: center;\n            gap: 8px;\n            flex-shrink: 0;\n          }\n          \n          .points-text {\n            font-family: 'Cera Pro', -apple-system, BlinkMacSystemFont, sans-serif;\n            font-weight: 700;\n            font-size: 19px;\n            color: #FFFFFF;\n            line-height: 19px;\n            white-space: nowrap;\n          }\n          \n          .points-icon {\n            width: 20px;\n            height: 20px;\n            background: #FFFFFF;\n            border-radius: 10px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n          }\n          \n          .points-crystal {\n            width: 12px;\n            height: 12px;\n            object-fit: contain;\n          }\n          \n          .task-actions {\n            display: flex;\n            align-items: flex-start;\n            justify-content: flex-end;\n            gap: 8px;\n            padding-top: 8px;\n            width: 100%;\n          }\n          \n          .task-button {\n            display: inline-flex;\n            flex-direction: column;\n            align-items: center;\n            justify-content: center;\n            padding: 8px 11px;\n            background: #FFFFFF;\n            border: none;\n            border-radius: 24px;\n            cursor: pointer;\n            transition: transform 0.1s ease-in-out;\n            -webkit-tap-highlight-color: transparent;\n          }\n          \n          .task-button:active {\n            transform: scale(0.98);\n          }\n          \n          .button-text {\n            font-family: 'Cera Pro', -apple-system, BlinkMacSystemFont, sans-serif;\n            font-weight: 300;\n            font-size: 13px;\n            color: #0D0D0D;\n            line-height: 13px;\n            letter-spacing: -0.64px;\n            white-space: nowrap;\n          }\n          \n          .button-text.bold {\n            font-weight: 500;\n          }\n          \n          .task-glow {\n            position: absolute;\n            top: -35px;\n            right: 13px;\n            width: 97px;\n            height: 97px;\n            background: rgba(255, 255, 255, 0.8);\n            border-radius: 48.5px;\n            filter: blur(100px);\n            pointer-events: none;\n          }\n\n          .loading-container, .error-container {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            height: 100vh;\n            height: -webkit-fill-available;\n            background-color: #FFFFFF;\n            font-family: 'Cera Pro', -apple-system, BlinkMacSystemFont, sans-serif;\n          }\n          \n          .loading-container {\n            color: #666666;\n          }\n          \n          .error-container {\n            color: #FF0000;\n            padding: 20px;\n            text-align: center;\n          }\n\n          @media (max-width: 375px) {\n            .main-container {\n              padding: 20px 0px 0px;\n            }\n            \n            .task-card {\n              padding: 13px;\n            }\n            \n            .task-title {\n              font-size: 14px;\n            }\n            \n            .points-text {\n              font-size: 18px;\n            }\n          }\n\n          @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n            .logo-image, .plus-icon, .balance-crystal, .points-crystal, .tasks-bg-image {\n              image-rendering: -webkit-optimize-contrast;\n              image-rendering: crisp-edges;\n            }\n          }\n\n          @supports (-webkit-touch-callout: none) {\n            .app-wrapper {\n              min-height: -webkit-fill-available;\n            }\n            \n            .main-container {\n              min-height: -webkit-fill-available;\n            }\n          }\n        `}</style>\n      </div>\n    </>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}