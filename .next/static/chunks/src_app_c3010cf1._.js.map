{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/georgiiisavich/Desktop/assist_plus/src/app/components/TextSlotMachine.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState, useRef, useLayoutEffect } from 'react';\n\ntype Prize = { name: string; icon: string };\n\ninterface HorizontalTextSlotMachineProps {\n    prizes: Prize[];\n    winningPrize: Prize | null;\n    onSpinEnd: () => void;\n}\n\nconst shuffle = (array: Prize[]): Prize[] => {\n    const newArray = [...array];\n    for (let i = newArray.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [newArray[i], newArray[j]] = [newArray[j], newArray[i]];\n    }\n    return newArray;\n};\n\nconst REEL_ITEM_WIDTH = 160;\nconst ANIMATION_DURATION = 3000;\nconst MIN_SPIN_DISTANCE = 20; // Минимальное количество элементов для прокрутки\n\nexport default function HorizontalTextSlotMachine({ prizes, winningPrize, onSpinEnd }: HorizontalTextSlotMachineProps) {\n    const containerRef = useRef<HTMLDivElement>(null);\n    const [containerWidth, setContainerWidth] = useState(0);\n    const [reelItems, setReelItems] = useState<Prize[]>([]);\n    const [transform, setTransform] = useState('translateX(0px)');\n    const timeoutRef = useRef<NodeJS.Timeout | null>(null);\n    const [isInitialized, setIsInitialized] = useState(false);\n    const animationRef = useRef<number | null>(null);\n    const isSpinningRef = useRef(false);\n\n    useLayoutEffect(() => {\n        if (containerRef.current) {\n            const width = containerRef.current.offsetWidth;\n            setContainerWidth(width);\n            \n            // Инициализируем начальные значения\n            const initialReel = Array.from({ length: 10 }, () => shuffle(prizes)).flat();\n            setReelItems(initialReel);\n            setIsInitialized(true);\n        }\n    }, [prizes]);\n\n    useEffect(() => {\n        if (!isInitialized || !winningPrize || containerWidth === 0 || isSpinningRef.current) return;\n        \n        isSpinningRef.current = true;\n        const newReel = Array.from({ length: 10 }, () => shuffle(prizes)).flat();\n        \n        // Находим индекс выигрышного приза\n        const winningIndex = newReel.findIndex(item => item.name === winningPrize.name);\n        \n        if (winningIndex !== -1) {\n            // Гарантируем минимальную дистанцию прокрутки\n            const targetIndex = winningIndex < MIN_SPIN_DISTANCE \n                ? winningIndex + MIN_SPIN_DISTANCE \n                : winningIndex;\n                \n            // Убедимся, что индекс не превышает длину массива\n            const safeIndex = targetIndex % newReel.length;\n            newReel[safeIndex] = winningPrize;\n            \n            setReelItems(newReel);\n            \n            // Горизонтальное позиционирование\n            const finalPosition = (containerWidth / 2) - (safeIndex * REEL_ITEM_WIDTH) - (REEL_ITEM_WIDTH / 2);\n            \n            if (animationRef.current) {\n                cancelAnimationFrame(animationRef.current);\n            }\n            \n            animationRef.current = requestAnimationFrame(() => {\n                setTransform(`translateX(${finalPosition}px)`);\n            });\n\n            if (timeoutRef.current) clearTimeout(timeoutRef.current);\n            timeoutRef.current = setTimeout(() => {\n                onSpinEnd();\n                isSpinningRef.current = false;\n            }, ANIMATION_DURATION);\n        }\n\n        return () => {\n            if (timeoutRef.current) clearTimeout(timeoutRef.current);\n            if (animationRef.current) cancelAnimationFrame(animationRef.current);\n        };\n    }, [winningPrize, containerWidth, isInitialized, onSpinEnd, prizes]);\n\n    return (\n        <div ref={containerRef} className=\"relative w-full h-full overflow-hidden border-2 border-purple-300 rounded-lg bg-gradient-to-br from-purple-100 to-blue-100\">\n            <div\n                className=\"absolute top-0 left-0 h-full flex\"\n                style={{\n                    transform: transform,\n                    transition: winningPrize \n                        ? `transform ${ANIMATION_DURATION}ms cubic-bezier(0.1, 0.8, 0.1, 1)`\n                        : 'none',\n                }}\n            >\n                {reelItems.map((prize, index) => (\n                    <div\n                        key={`${prize.name}-${index}`}\n                        className=\"h-full flex items-center justify-center p-2 flex-shrink-0\"\n                        style={{ width: REEL_ITEM_WIDTH }}\n                    >\n                        <div className=\"w-full h-4/5 flex items-center justify-center bg-white border border-gray-200 rounded-lg shadow-sm px-3\">\n                            <p className=\"text-sm font-medium text-center text-gray-800\">\n                                {prize.name}\n                            </p>\n                        </div>\n                    </div>\n                ))}\n            </div>\n            <div className=\"absolute top-0 left-0 h-full w-1/3 bg-gradient-to-r from-white to-transparent z-10 pointer-events-none\" />\n            <div className=\"absolute top-0 right-0 h-full w-1/3 bg-gradient-to-l from-white to-transparent z-10 pointer-events-none\" />\n            <div className=\"absolute top-1/2 left-1/2 w-0.5 h-4/5 bg-purple-500/80 z-20 -translate-x-1/2 -translate-y-1/2 rounded-full\" />\n        </div>\n    );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":["file:///Users/georgiiisavich/Desktop/assist_plus/src/app/%28main%29/auction/page.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\n'use client';\n\nimport { useState, useEffect, useRef } from 'react';\nimport HorizontalTextSlotMachine from '@/app/components/TextSlotMachine';\n\ntype Prize = {\n  name: string;\n  type: 'rare' | 'common';\n  canWin: boolean;\n};\n\nconst ALL_PRIZES: Prize[] = [\n  // Редкие призы (малый шанс)\n  { name: 'Онлайн-мини-разбор с Иваном', type: 'rare', canWin: true },\n  { name: 'Приоритетное место в мини-разборе у Ивана', type: 'rare', canWin: true },\n  { name: 'Участие в розыгрыше завтрака с Иваном', type: 'rare', canWin: false },\n  { name: 'Ответ Ивана голосом на ваш вопрос', type: 'rare', canWin: true },\n  { name: 'Звонок 1 на 1 с Антоном Орешкиным', type: 'rare', canWin: true },\n\n  // Обычные призы (хороший шанс)\n  { name: '3 чек-листа', type: 'common', canWin: true },\n  { name: 'Участие в созвоне Антона Орешкина с БА', type: 'common', canWin: true },\n  { name: '1000 A+', type: 'common', canWin: true },\n  { name: 'Разбор вашего резюме', type: 'common', canWin: true }\n];\n\ninterface UserProfile {\n  id: number;\n  balance_crystals: number; // Changed from balance_pluses to match profile page\n  cases_to_open: number;\n}\n\nexport default function ShopPage() {\n  const [user, setUser] = useState<UserProfile | null>(null);\n  const [isSpinning, setIsSpinning] = useState(false);\n  const [winningPrize, setWinningPrize] = useState<Prize | null>(null);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [spinKey, setSpinKey] = useState(0);\n  const [showPrizeAlert, setShowPrizeAlert] = useState(false);\n  const hasSpunRef = useRef(false);\n\n  useEffect(() => {\n    const tg = window.Telegram?.WebApp;\n    if (!tg) {\n      setError(\"Telegram WebApp не найден. Откройте приложение в Telegram.\");\n      setIsLoading(false);\n      return;\n    }\n\n    tg.ready();\n\n    fetch('/api/auth', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ initData: tg.initData }),\n    })\n    .then(response => {\n      if (!response.ok) throw new Error('Не удалось загрузить данные пользователя');\n      return response.json();\n    })\n    .then(data => {\n      if (data && data.error) {\n        throw new Error(data.error);\n      }\n      setUser(data);\n    })\n    .catch(err => {\n      console.error(\"Shop page fetch error:\", err);\n      setError(err.message);\n      // Фиктивные данные для разработки\n      const mockUser: UserProfile = {\n        id: 1,\n        balance_crystals: 455, // Changed from balance_pluses\n        cases_to_open: 5\n      };\n      setUser(mockUser);\n    })\n    .finally(() => {\n      setIsLoading(false);\n    });\n  }, []);\n\n  const getRandomPrize = (): Prize => {\n    const random = Math.random();\n    const availablePrizes = random < 0.2 \n      ? ALL_PRIZES.filter(p => p.type === 'rare' && p.canWin)\n      : ALL_PRIZES.filter(p => p.type === 'common' && p.canWin);\n\n    return availablePrizes[Math.floor(Math.random() * availablePrizes.length)];\n  };\n\n  const saveWinningToDatabase = async (prize: Prize) => {\n    try {\n      const tg = window.Telegram?.WebApp;\n      if (!tg) return;\n\n      const response = await fetch('/api/user/save-winning', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          initData: tg.initData,\n          prizeName: prize.name,\n          prizeType: prize.type\n        }),\n      });\n\n      if (!response.ok) {\n        console.error('Failed to save winning to database');\n      }\n    } catch (error) {\n      console.error('Error saving winning:', error);\n    }\n  };\n\n  const handleSpin = async () => {\n    // TEMPORARY: Removed case cost check\n    // ORIGINAL CODE (uncomment to restore):\n    // if (isSpinning || hasSpunRef.current || !user || user.cases_to_open <= 0) return;\n    if (isSpinning || hasSpunRef.current || !user) return;\n\n    setIsSpinning(true);\n    setError('');\n    setWinningPrize(null);\n    setShowPrizeAlert(false);\n    hasSpunRef.current = true;\n\n    try {\n      window.Telegram?.WebApp?.HapticFeedback.impactOccurred('light');\n\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      const prize = getRandomPrize();\n      setWinningPrize(prize);\n      setSpinKey(prev => prev + 1);\n      \n      // TEMPORARY: Remove case cost reduction\n      // ORIGINAL CODE (uncomment to restore):\n      // setUser(prev => prev ? { \n      //   ...prev, \n      //   cases_to_open: prev.cases_to_open - 1 \n      // } : null);\n\n      // Add balance increase for 1000 pluses prize\n      if (prize.name === '1000 A+') {\n        setUser(prev => prev ? {\n          ...prev,\n          balance_crystals: prev.balance_crystals + 1000\n        } : null);\n      }\n      \n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Неизвестная ошибка');\n      setIsSpinning(false);\n      hasSpunRef.current = false;\n      window.Telegram?.WebApp?.HapticFeedback.notificationOccurred('error');\n    }\n  };\n\n  const handleSpinEnd = () => {\n    if (winningPrize && !showPrizeAlert) {\n      setShowPrizeAlert(true);\n      window.Telegram?.WebApp?.HapticFeedback.notificationOccurred('success');\n      window.Telegram?.WebApp.showAlert(`Поздравляем! Вы выиграли: ${winningPrize.name}`);\n      saveWinningToDatabase(winningPrize);\n    }\n    setIsSpinning(false);\n    hasSpunRef.current = false;\n  };\n\n  if (isLoading) {\n    return <div className=\"fixed inset-0 flex items-center justify-center bg-white\"><p>Загрузка...</p></div>;\n  }\n\n  return (\n    <div className=\"flex flex-col min-h-screen font-sans items-center px-4 pt-6 pb-4 text-center text-black bg-gray-50\">\n      {/* Заголовок магазина */}\n      <div className=\"w-full mb-6\">\n        <h1 className=\"text-2xl font-bold mb-2\">\n          Магазин\n        </h1>\n        <p className=\"text-gray-600\">\n          Обменивай свои плюсы на интересные товары!\n        </p>\n      </div>\n      \n      {/* Блок с балансом */}\n      <div className=\"w-full bg-white rounded-xl shadow-sm p-5 mb-5\">\n        <div className=\"text-gray-700 mb-4\">\n          У вас доступно <span className=\"font-semibold\">{user?.cases_to_open || 0} кейсов</span>\n        </div>\n        <div className=\"text-gray-700\">\n          Баланс: <span className=\"font-semibold\">\n            {user?.balance_crystals?.toLocaleString('ru-RU') || 0} плюсов\n          </span>\n        </div>\n      </div>\n\n      {/* Слот-машина */}\n      <div className=\"w-full bg-white rounded-xl shadow-sm p-4 mb-5\">\n        <div className=\"h-64 mb-4\">\n          <HorizontalTextSlotMachine\n            key={spinKey}\n            prizes={ALL_PRIZES.map(p => ({ name: p.name, icon: '' }))}\n            winningPrize={winningPrize ? { name: winningPrize.name, icon: '' } : null}\n            onSpinEnd={handleSpinEnd}\n          />\n        </div>\n        \n        <button \n          onClick={handleSpin}\n          // TEMPORARY: Removed cases check from disabled state\n          // ORIGINAL CODE (uncomment to restore):\n          // disabled={isSpinning || !user || user.cases_to_open <= 0}\n          disabled={isSpinning || !user}\n          className=\"w-full h-14 flex items-center justify-center bg-gradient-to-r from-purple-600 to-blue-500 text-white text-lg font-bold rounded-xl \n          transition-all\n          shadow-[0_4px_0_0_rgba(91,33,182,0.6)] \n          active:translate-y-1 active:shadow-[0_1px_0_0_rgba(91,33,182,0.6)]\n          disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          {/* TEMPORARY: Removed case count */}\n          {/* ORIGINAL CODE (uncomment to restore): */}\n          {/* {isSpinning ? 'Крутится...' : `Крутить (${user?.cases_to_open || 0} шт.)`} */}\n          {isSpinning ? 'Крутится...' : 'Крутить'}\n        </button>\n        \n        {/* TEMPORARY: Remove case cost text */}\n        {/* ORIGINAL CODE (uncomment to restore): */}\n        {/* <div className=\"text-sm text-purple-600 font-medium mt-2\">\n          Крутить стоит 1 кейс\n        </div> */}\n      </div>\n\n      {/* Товар - созвон */}\n      <div className=\"w-full bg-white rounded-xl shadow-sm p-5\">\n        <h2 className=\"text-lg font-bold mb-4\">Премиум товар</h2>\n        \n        <div className=\"flex justify-between items-center py-3\">\n          <div className=\"text-left\">\n            <div className=\"font-medium\">Созвон с кумиром</div>\n            <div className=\"text-sm text-gray-500\">30 минут личного общения</div>\n          </div>\n          <div className=\"flex items-center\">\n            <span className=\"text-purple-600 font-bold mr-3\">10,000 плюсов</span>\n            <button \n              disabled={!user || user.balance_crystals < 10000}\n              className=\"bg-purple-600 text-white text-sm font-semibold px-3 py-1 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              Купить\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}