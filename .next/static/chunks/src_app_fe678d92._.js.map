{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/georgiiisavich/Desktop/assist_plus/src/app/components/SlotMachine.tsx"],"sourcesContent":["'use client';\n\nimport Image from 'next/image';\nimport { useEffect, useState, useRef, useLayoutEffect } from 'react';\n\ntype Prize = { name: string; icon: string };\n\ninterface SlotMachineProps {\n    prizes: Prize[];\n    winningPrize: Prize | null;\n    onSpinEnd: () => void;\n}\n\nconst shuffle = (array: Prize[]): Prize[] => {\n    const newArray = [...array];\n    for (let i = newArray.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [newArray[i], newArray[j]] = [newArray[j], newArray[i]];\n    }\n    return newArray;\n};\n\nconst REEL_ITEM_HEIGHT = 160;\nconst IMAGE_SIZE = 112;\nconst ANIMATION_DURATION = 5000;\n\nexport default function SlotMachine({ prizes, winningPrize, onSpinEnd }: SlotMachineProps) {\n    const containerRef = useRef<HTMLDivElement>(null);\n    const [containerHeight, setContainerHeight] = useState(0);\n\n    const [reelItems, setReelItems] = useState<Prize[]>([]);\n    const [transform, setTransform] = useState('translateY(0px)');\n    const timeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n    useLayoutEffect(() => {\n        if (containerRef.current) {\n            setContainerHeight(containerRef.current.offsetHeight);\n        }\n    }, []);\n\n    useEffect(() => {\n        if (winningPrize && containerHeight > 0) {\n            const newReel = Array.from({ length: 10 }, () => shuffle(prizes)).flat();\n            const winningIndex = newReel.length - prizes.length * 2;\n            newReel[winningIndex] = winningPrize;\n            setReelItems(newReel);\n            const finalPosition =\n                (containerHeight / 2) -\n                (winningIndex * REEL_ITEM_HEIGHT) -\n                (REEL_ITEM_HEIGHT / 2);\n            requestAnimationFrame(() => {\n                setTransform(`translateY(${finalPosition}px)`);\n            });\n\n            if (timeoutRef.current) clearTimeout(timeoutRef.current);\n            timeoutRef.current = setTimeout(onSpinEnd, ANIMATION_DURATION);\n        } else {\n            const initialReel = Array.from({ length: 10 }, () => shuffle(prizes)).flat();\n            setReelItems(initialReel);\n        }\n\n        return () => {\n            if (timeoutRef.current) clearTimeout(timeoutRef.current);\n        };\n    }, [winningPrize, containerHeight]);\n\n    return (\n        <div ref={containerRef} className=\"relative w-full h-full overflow-hidden\">\n            <div\n                className=\"absolute top-0 left-0 w-full\"\n                style={{\n                    transform: transform,\n                    transition: transform !== 'translateY(0px)'\n                        ? `transform ${ANIMATION_DURATION}ms cubic-bezier(0.25, 1, 0.5, 1)`\n                        : 'none',\n                }}\n            >\n                {reelItems.map((prize, index) => (\n                    <div\n                        key={`${prize.name}-${index}`}\n                        className=\"w-full flex flex-col items-center justify-center p-2\"\n                        style={{ height: REEL_ITEM_HEIGHT }}\n                    >\n                        <Image\n                            src={prize.icon}\n                            alt={prize.name}\n                            width={IMAGE_SIZE}\n                            height={IMAGE_SIZE}\n                            className=\"object-contain\"\n                            priority\n                        />\n                        <p className=\"mt-2 text-base text-gray-800 font-bold text-center\">\n                            {prize.name}\n                        </p>\n                    </div>\n                ))}\n            </div>\n            <div className=\"absolute top-0 left-0 w-full h-1/3 bg-gradient-to-b from-white to-transparent z-10 pointer-events-none\" />\n            <div className=\"absolute bottom-0 left-0 w-full h-1/3 bg-gradient-to-t from-white to-transparent z-10 pointer-events-none\" />\n            <div className=\"absolute top-1/2 left-4 right-4 h-0.5 bg-red-500/80 z-20 -translate-y-1/2 rounded-full\" />\n        </div>\n    );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///Users/georgiiisavich/Desktop/assist_plus/src/app/%28main%29/cases/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport SlotMachine from 'wxqryy/app/components/SlotMachine';\n\ntype Prize = { name: string; icon: string; };\ntype UserProfile = { id: number; cases_to_open: number; };\n\nconst ALL_PRIZES: Prize[] = [\n    { name: 'Чек-лист', icon: '/images/checklist.png' },\n    ...Array.from({ length: 9 }, (_, i) => ({\n        name: `Подарок ${i + 1}`,\n        icon: '/images/gift.png',\n    }))\n];\n\nexport default function CasesPage() {\n    const [user, setUser] = useState<UserProfile | null>(null);\n    const [isSpinning, setIsSpinning] = useState(false);\n    const [winningPrize, setWinningPrize] = useState<Prize | null>(null);\n    const [error, setError] = useState('');\n    const [isLoading, setIsLoading] = useState(true);\n    const [spinKey, setSpinKey] = useState(0);\n\n    useEffect(() => {\n        const tg = window.Telegram?.WebApp;\n        if (!tg) {\n            setError(\"Telegram WebApp не найден. Откройте приложение в Telegram.\");\n            setIsLoading(false);\n            return;\n        }\n\n        tg.ready();\n        fetch('/api/auth', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ initData: tg.initData }),\n        })\n        .then(res => res.ok ? res.json() : Promise.reject('Ошибка при загрузке профиля.'))\n        .then(data => {\n            if (data.error) throw new Error(data.error);\n            setUser(data);\n        })\n        .catch(err => setError(err instanceof Error ? err.message : \"Не удалось связаться с сервером.\"))\n        .finally(() => setIsLoading(false));\n    }, []);\n\n    const handleSpin = async () => {\n        if (isSpinning || !user || user.cases_to_open < 1) return;\n\n        setSpinKey(prevKey => prevKey + 1); \n        setIsSpinning(true);\n        setError('');\n        setWinningPrize(null);\n\n        try {\n            window.Telegram?.WebApp?.HapticFeedback.impactOccurred('light');\n\n            const response = await fetch('/api/cases/open', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ initData: window.Telegram?.WebApp.initData }),\n            });\n\n            const result = await response.json();\n            if (!response.ok) throw new Error(result.error || 'Ошибка при открытии кейса');\n\n            const wonPrize = ALL_PRIZES.find(p => p.name === result.prizeName);\n            if (wonPrize) {\n                setUser(prev => prev ? { ...prev, cases_to_open: prev.cases_to_open - 1 } : null);\n                setWinningPrize(wonPrize);\n            } else {\n                throw new Error('Получен неизвестный приз от сервера.');\n            }\n        } catch (err) {\n            setError(err instanceof Error ? err.message : 'Неизвестная ошибка');\n            setIsSpinning(false);\n            window.Telegram?.WebApp?.HapticFeedback.notificationOccurred('error');\n        }\n    };\n\n    const handleSpinEnd = () => {\n        if (winningPrize) {\n            window.Telegram?.WebApp?.HapticFeedback.notificationOccurred('success');\n            window.Telegram?.WebApp.showAlert(`Поздравляем! Вы выиграли: ${winningPrize.name}`);\n        }\n        setIsSpinning(false);\n    };\n\n    if (isLoading) {\n        return <div className=\"fixed inset-0 flex items-center justify-center bg-white\"><p>Загрузка...</p></div>;\n    }\n\n    return (\n        <div className=\"fixed inset-0 flex flex-col items-center p-6 pb-28 bg-white z-10\">\n            <h1 className=\"text-3xl font-bold mb-4 text-black flex-shrink-0\">\n                Откройте кейс\n            </h1>\n\n            <div className=\"w-full flex-grow flex flex-col\">\n                <SlotMachine\n                    key={spinKey} \n                    prizes={ALL_PRIZES}\n                    winningPrize={winningPrize}\n                    onSpinEnd={handleSpinEnd}\n                />\n            </div>\n            \n            <div className=\"w-full mt-auto pt-6 flex-shrink-0\">\n                {error && <p className=\"text-red-500 text-center mb-2\">{error}</p>}\n                <button\n                    onClick={handleSpin}\n                    disabled={isSpinning || isLoading || !user || user.cases_to_open < 1}\n                    className=\"w-full h-16 bg-red-500 text-white font-bold text-lg rounded-2xl transition-transform active:scale-95 disabled:bg-gray-400 disabled:cursor-not-allowed disabled:active:scale-100\"\n                >\n                    {isSpinning ? 'Крутится...' : `Крутить (${user?.cases_to_open || 0} шт.)`}\n                </button>\n            </div>\n        </div>\n    );\n}"],"names":[],"mappings":"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","debugId":null}}]
}