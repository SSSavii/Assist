{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/georgiiisavich/Desktop/assist_plus/src/lib/db.ts"],"sourcesContent":["import Database from 'better-sqlite3';\n\nconst db = new Database('./main.db', { verbose: console.log });\n\nprocess.on('exit', () => db.close());\n\nexport default db;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,KAAK,IAAI,2HAAA,CAAA,UAAQ,CAAC,aAAa;IAAE,SAAS,QAAQ,GAAG;AAAC;AAE5D,QAAQ,EAAE,CAAC,QAAQ,IAAM,GAAG,KAAK;uCAElB","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///Users/georgiiisavich/Desktop/assist_plus/src/lib/adminAuth.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function withAdminAuth(handler: (request: NextRequest, context: any) => Promise<NextResponse>) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return async (request: NextRequest, context: any) => {\n    const adminSecretKey = process.env.ADMIN_API_SECRET_KEY;\n\n    if (!adminSecretKey) {\n      console.error('CRITICAL: ADMIN_API_SECRET_KEY не установлен в .env.local');\n      return NextResponse.json({ error: 'Ошибка конфигурации сервера' }, { status: 500 });\n    }\n\n    const providedKey = request.headers.get('X-Admin-Secret-Key');\n\n    if (providedKey !== adminSecretKey) {\n      console.warn('Отклонен неавторизованный запрос к админ-API.');\n      return NextResponse.json({ error: 'Доступ запрещен' }, { status: 403 });\n    }\n\n    return handler(request, context);\n  };\n}"],"names":[],"mappings":";;;AAAA;;AAGO,SAAS,cAAc,OAAsE;IAClG,8DAA8D;IAC9D,OAAO,OAAO,SAAsB;QAClC,MAAM,iBAAiB,QAAQ,GAAG,CAAC,oBAAoB;QAEvD,IAAI,CAAC,gBAAgB;YACnB,QAAQ,KAAK,CAAC;YACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA8B,GAAG;gBAAE,QAAQ;YAAI;QACnF;QAEA,MAAM,cAAc,QAAQ,OAAO,CAAC,GAAG,CAAC;QAExC,IAAI,gBAAgB,gBAAgB;YAClC,QAAQ,IAAI,CAAC;YACb,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAkB,GAAG;gBAAE,QAAQ;YAAI;QACvE;QAEA,OAAO,QAAQ,SAAS;IAC1B;AACF","debugId":null}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///Users/georgiiisavich/Desktop/assist_plus/src/app/api/admin/lots/%5Bid%5D/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport db from 'wxqryy/lib/db';\nimport { withAdminAuth } from 'wxqryy/lib/adminAuth';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any\nexport const PATCH = withAdminAuth(async (request: any, context: any) => {\n  const lotId = parseInt(context.params.id, 10);\n  if (isNaN(lotId)) {\n    return NextResponse.json({ error: 'Некорректный ID лота' }, { status: 400 });\n  }\n\n  try {\n    const body = await request.json();\n    const fieldToUpdate = Object.keys(body)[0];\n    const newValue = Object.values(body)[0];\n    const allowedFields = ['title', 'description', 'photoUrl', 'city', 'age', 'start_price', 'status'];\n\n    if (!fieldToUpdate || !allowedFields.includes(fieldToUpdate)) {\n      return NextResponse.json({ error: `Недопустимое поле для редактирования: ${fieldToUpdate}` }, { status: 400 });\n    }\n\n    const stmt = db.prepare(`UPDATE Lots SET ${fieldToUpdate} = ? WHERE id = ?`);\n    const result = stmt.run(newValue, lotId);\n\n    if (result.changes === 0) {\n      return NextResponse.json({ error: `Лот с ID ${lotId} не найден` }, { status: 404 });\n    }\n\n    return NextResponse.json({ message: `Лот ${lotId} успешно обновлен` });\n  } catch (error) {\n    console.error(`Ошибка в PATCH /api/admin/lots/${lotId}:`, error);\n    return NextResponse.json({ error: 'Ошибка сервера при редактировании лота' }, { status: 500 });\n  }\n});\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any\nexport const DELETE = withAdminAuth(async (_request: any, context: any) => {\n  const lotId = parseInt(context.params.id, 10);\n  if (isNaN(lotId)) {\n    return NextResponse.json({ error: 'Некорректный ID лота' }, { status: 400 });\n  }\n  \n  try {\n    const cancelLotTransaction = db.transaction(() => {\n        const lot = db.prepare('SELECT winner_id, current_price FROM Lots WHERE id = ?').get(lotId) as { winner_id: number | null, current_price: number } | undefined;\n\n        if (!lot) {\n            throw new Error(`Лот с ID ${lotId} не найден`);\n        }\n\n        if (lot.winner_id && lot.current_price > 0) {\n            console.log(`[CANCEL LOT] Возврат ${lot.current_price} кристаллов пользователю ${lot.winner_id} за отмену лота ${lotId}`);\n            db.prepare('UPDATE users SET balance_crystals = balance_crystals + ? WHERE id = ?')\n              .run(lot.current_price, lot.winner_id);\n        }\n\n        const result = db.prepare(`UPDATE Lots SET status = 'CANCELLED' WHERE id = ?`).run(lotId);\n        \n        if (result.changes === 0) {\n            throw new Error(`Лот с ID ${lotId} не найден при попытке обновления статуса`);\n        }\n    });\n\n    cancelLotTransaction();\n    \n    return NextResponse.json({ message: `Лот ${lotId} был отменен, ставка (если была) возвращена.` });\n\n  } catch (error) {\n    console.error(`Ошибка в DELETE /api/admin/lots/${lotId}:`, error);\n    const errorMessage = error instanceof Error ? error.message : \"Ошибка сервера\";\n    return NextResponse.json({ error: errorMessage }, { status: 500 });\n  }\n});"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAGO,MAAM,QAAQ,CAAA,GAAA,yHAAA,CAAA,gBAAa,AAAD,EAAE,OAAO,SAAc;IACtD,MAAM,QAAQ,SAAS,QAAQ,MAAM,CAAC,EAAE,EAAE;IAC1C,IAAI,MAAM,QAAQ;QAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAuB,GAAG;YAAE,QAAQ;QAAI;IAC5E;IAEA,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,gBAAgB,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE;QAC1C,MAAM,WAAW,OAAO,MAAM,CAAC,KAAK,CAAC,EAAE;QACvC,MAAM,gBAAgB;YAAC;YAAS;YAAe;YAAY;YAAQ;YAAO;YAAe;SAAS;QAElG,IAAI,CAAC,iBAAiB,CAAC,cAAc,QAAQ,CAAC,gBAAgB;YAC5D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO,CAAC,sCAAsC,EAAE,eAAe;YAAC,GAAG;gBAAE,QAAQ;YAAI;QAC9G;QAEA,MAAM,OAAO,kHAAA,CAAA,UAAE,CAAC,OAAO,CAAC,CAAC,gBAAgB,EAAE,cAAc,iBAAiB,CAAC;QAC3E,MAAM,SAAS,KAAK,GAAG,CAAC,UAAU;QAElC,IAAI,OAAO,OAAO,KAAK,GAAG;YACxB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO,CAAC,SAAS,EAAE,MAAM,UAAU,CAAC;YAAC,GAAG;gBAAE,QAAQ;YAAI;QACnF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS,CAAC,IAAI,EAAE,MAAM,iBAAiB,CAAC;QAAC;IACtE,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,+BAA+B,EAAE,MAAM,CAAC,CAAC,EAAE;QAC1D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAyC,GAAG;YAAE,QAAQ;QAAI;IAC9F;AACF;AAGO,MAAM,SAAS,CAAA,GAAA,yHAAA,CAAA,gBAAa,AAAD,EAAE,OAAO,UAAe;IACxD,MAAM,QAAQ,SAAS,QAAQ,MAAM,CAAC,EAAE,EAAE;IAC1C,IAAI,MAAM,QAAQ;QAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAuB,GAAG;YAAE,QAAQ;QAAI;IAC5E;IAEA,IAAI;QACF,MAAM,uBAAuB,kHAAA,CAAA,UAAE,CAAC,WAAW,CAAC;YACxC,MAAM,MAAM,kHAAA,CAAA,UAAE,CAAC,OAAO,CAAC,0DAA0D,GAAG,CAAC;YAErF,IAAI,CAAC,KAAK;gBACN,MAAM,IAAI,MAAM,CAAC,SAAS,EAAE,MAAM,UAAU,CAAC;YACjD;YAEA,IAAI,IAAI,SAAS,IAAI,IAAI,aAAa,GAAG,GAAG;gBACxC,QAAQ,GAAG,CAAC,CAAC,qBAAqB,EAAE,IAAI,aAAa,CAAC,yBAAyB,EAAE,IAAI,SAAS,CAAC,gBAAgB,EAAE,OAAO;gBACxH,kHAAA,CAAA,UAAE,CAAC,OAAO,CAAC,yEACR,GAAG,CAAC,IAAI,aAAa,EAAE,IAAI,SAAS;YAC3C;YAEA,MAAM,SAAS,kHAAA,CAAA,UAAE,CAAC,OAAO,CAAC,CAAC,iDAAiD,CAAC,EAAE,GAAG,CAAC;YAEnF,IAAI,OAAO,OAAO,KAAK,GAAG;gBACtB,MAAM,IAAI,MAAM,CAAC,SAAS,EAAE,MAAM,yCAAyC,CAAC;YAChF;QACJ;QAEA;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS,CAAC,IAAI,EAAE,MAAM,4CAA4C,CAAC;QAAC;IAEjG,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,gCAAgC,EAAE,MAAM,CAAC,CAAC,EAAE;QAC3D,MAAM,eAAe,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAC9D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAa,GAAG;YAAE,QAAQ;QAAI;IAClE;AACF","debugId":null}}]
}