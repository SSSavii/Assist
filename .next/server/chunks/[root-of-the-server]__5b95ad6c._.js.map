{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/georgiiisavich/Desktop/assist_plus/src/lib/db.ts"],"sourcesContent":["import Database from 'better-sqlite3';\n\nconst db = new Database('./main.db', { verbose: console.log });\n\nprocess.on('exit', () => db.close());\n\nexport default db;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,KAAK,IAAI,2HAAA,CAAA,UAAQ,CAAC,aAAa;IAAE,SAAS,QAAQ,GAAG;AAAC;AAE5D,QAAQ,EAAE,CAAC,QAAQ,IAAM,GAAG,KAAK;uCAElB","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///Users/georgiiisavich/Desktop/assist_plus/src/app/api/tap/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport db from 'wxqryy/lib/db'; \nimport { URLSearchParams } from 'url';\nimport { createHmac } from 'crypto';\n\nconst DAILY_TAP_LIMIT = 100;\nconst TAP_REWARD = 1;\n\nfunction validateTelegramHash(initData: string, botToken: string): boolean {\n  try {\n    const params = new URLSearchParams(initData);\n    const hash = params.get('hash');\n    if (!hash) return false;\n    params.delete('hash');\n    const dataCheckArr: string[] = [];\n    const sortedKeys = Array.from(params.keys()).sort();\n    sortedKeys.forEach(key => dataCheckArr.push(`${key}=${params.get(key)}`));\n    const dataCheckString = dataCheckArr.join('\\n');\n    const secretKey = createHmac('sha256', 'WebAppData').update(botToken).digest();\n    const ownHash = createHmac('sha256', secretKey).update(dataCheckString).digest('hex');\n    return ownHash === hash;\n  } catch (error) {\n    console.error(\"Error during hash validation:\", error);\n    return false;\n  }\n}\nexport async function POST(req: NextRequest) {\n  try {\n    const { initData } = await req.json();\n\n    const botToken = process.env.BOT_TOKEN;\n    if (!initData || !botToken || !validateTelegramHash(initData, botToken)) {\n      return NextResponse.json({ error: 'Invalid hash' }, { status: 403 });\n    }\n    \n    const params = new URLSearchParams(initData);\n    const userData = JSON.parse(params.get('user') || '{}');\n\n    if (!userData.id) {\n      return NextResponse.json({ error: 'User not found in initData' }, { status: 400 });\n    }\n\n    const today = new Date().toISOString().split('T')[0];\n\n    const tapTransaction = db.transaction(() => {\n      const user = db.prepare('SELECT daily_taps_count, last_tap_date FROM users WHERE tg_id = ?').get(userData.id) as { daily_taps_count: number; last_tap_date: string | null };\n\n      if (!user) {\n        return { error: 'User not found in DB', status: 404 };\n      }\n      \n      let currentTaps = user.daily_taps_count;\n\n      if (user.last_tap_date !== today) {\n        db.prepare('UPDATE users SET daily_taps_count = 0, last_tap_date = ? WHERE tg_id = ?').run(today, userData.id);\n        currentTaps = 0;\n      }\n\n      if (currentTaps >= DAILY_TAP_LIMIT) {\n        return { error: 'Daily tap limit reached', status: 429, tapsLeft: 0 };\n      }\n\n      db.prepare(`\n        UPDATE users\n        SET balance_crystals = balance_crystals + ?,\n            daily_taps_count = daily_taps_count + 1\n        WHERE tg_id = ?\n      `).run(TAP_REWARD, userData.id);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const newBalance = (db.prepare('SELECT balance_crystals FROM users WHERE tg_id = ?').get(userData.id) as any).balance_crystals;\n      return { \n        success: true, \n        newBalance: newBalance,\n        tapsLeft: DAILY_TAP_LIMIT - (currentTaps + 1) \n      };\n    });\n\n    const result = tapTransaction();\n    \n    if (result.error) {\n        return NextResponse.json({ error: result.error, tapsLeft: result.tapsLeft }, { status: result.status });\n    }\n\n    return NextResponse.json(result);\n\n  } catch (error) {\n    console.error('API /api/tap Error:', error);\n    return NextResponse.json({ error: 'Internal Server Error' }, { status: 500 });\n  }\n}"],"names":[],"mappings":"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","debugId":null}}]
}